name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main
      - feature/*

variables: 
  - template: templates/variables-global.yml
  - template: templates/variables-dev.yml
  - name : azureServiceConnectionForAcr
    value: AZR-NCE-DEV1
  # - name: releaseName
    # value: hello-world

pool:
  name: DEFRA-COMMON-ubuntu2204-SSV3

parameters:
  - name: releaseName
    type: string
    values:
      - hello-world
steps:

# - task: HelmDeploy@0
#   displayName: Helm Package
#   inputs:
#     command: package
#     chartPath: $(chartPath)
#     destination: $(Build.ArtifactStagingDirectory)

# - task: CopyFiles@2
#   displayName: 'Move Helm artifact'
#   inputs:
#     sourceFolder: $(Build.ArtifactStagingDirectory)
#     contents: '**.tgz'
#     targetFolder: '$(Build.ArtifactStagingDirectory)/helmartifact/'

- task: KubeloginInstaller@0
  inputs:
    kubeloginVersion: 'latest'

- task: HelmDeploy@0
  displayName: 'Helm Deploy'
  condition: succeeded()
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: $(azureServiceConnectionForAcr)
    azureResourceGroup: $(aksResourceGroupName)
    kubernetesCluster : $(aksClusterName)
    releaseName: $(releaseName)
    namespace: helloworld
    command: 'upgrade'
    chartType: 'FilePath'
    chartPath: '$(Build.SourcesDirectory)/charts/hello'
    valueFile: $(Build.SourcesDirectory)/charts/hello/hello-values.yaml
    install: true
    # force: true
    arguments: --debug --create-namespace
  
- task: HelmDeploy@0
  displayName: 'Helm Rollback'
  condition: failed()
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: $(azureServiceConnectionForAcr)
    azureResourceGroup: $(aksResourceGroupName)
    kubernetesCluster : $(aksClusterName)
    namespace: helloworld
    command: 'rollback'
    arguments: ${{ parameters.releaseName }} --timeout=30m --debug

# - task: PublishPipelineArtifact@1
#   #condition: and(succeeded(), or(eq(variables['isMain'], 'true'), eq(variables['isPullRequest'], 'true')))
#   inputs:
#     targetPath: '$(Build.ArtifactStagingDirectory)/helmartifact/'
#     artifactName: charts

# - task: DownloadPipelineArtifact@2
#   displayName: 'Download Helm Charts'
#   condition: succeeded()
#   inputs:
#     buildType: 'current'
#     artifact: charts

# - task: AzureCLI@2
#   displayName: 'Push Helm charts to Dev Acr'
#   inputs:
#     azureSubscription: $(azureServiceConnectionForAcr) 
#     scriptType: bash
#     scriptLocation: inlineScript
#     inlineScript: |
#       az account set --subscription $(azureServiceConnectionForAcr)
#       PASSWORD=$(az acr login --name $(acrContainerRegistry) --expose-token --output tsv --query accessToken)
#       echo "Logging into ACR"
#       echo $PASSWORD | helm registry login $(acrContainerRegistry) --username "00000000-0000-0000-0000-000000000000" --password-stdin
#       echo "Change directory"
#       cd "$(Build.ArtifactStagingDirectory)/helmartifact/"
#       FILENAME=$(find . -iname hello-world*.tgz -type f -printf '%P\n')
#       echo $FILENAME
#       echo "Pushing Helm Chart"
#       helm push hello-world-0.1.0.tgz oci://$(acrContainerRegistry)/helm --debug

# - task: KubeloginInstaller@0
#   inputs:
#     kubeloginVersion: 'latest'

# - script: |
#     echo $(Build.SourcesDirectory)
#     echo $(Pipeline.Workspace)
#     pwd
#     ls
#   displayName: 'pwd'