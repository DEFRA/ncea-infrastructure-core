name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
      - main
      - feature/*

variables: 
  - template: templates/variables-global.yml
  - template: templates/variables-dev.yml
  - name : azureServiceConnectionForAcr
    value: AZR-NCE-DEV1

pool:
  name: DEFRA-COMMON-ubuntu2204-SSV3

steps:

- task: HelmDeploy@0
  displayName: Helm Package
  inputs:
    command: package
    chartPath: $(chartPath)
    destination: $(Build.ArtifactStagingDirectory)

- task: CopyFiles@2
  displayName: 'Move Helm artifact'
  inputs:
    sourceFolder: $(Build.ArtifactStagingDirectory)
    contents: '**.tgz'
    targetFolder: '$(Build.ArtifactStagingDirectory)/helmartifact/'

# - task: PublishPipelineArtifact@1
#   #condition: and(succeeded(), or(eq(variables['isMain'], 'true'), eq(variables['isPullRequest'], 'true')))
#   inputs:
#     targetPath: '$(Build.ArtifactStagingDirectory)/helmartifact/'
#     artifactName: charts

# - task: DownloadPipelineArtifact@2
#   displayName: 'Download Helm Charts'
#   condition: succeeded()
#   inputs:
#     buildType: 'current'
#     artifact: charts

- task: AzureCLI@2
  displayName: 'Push Helm charts to Dev Acr'
  inputs:
    azureSubscription: $(azureServiceConnectionForAcr) 
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      echo "setting Azure Subscription"
      az account set --subscription $(azureServiceConnectionForAcr)
      PASSWORD=$(az acr token create -n $USER_NAME -r $ACR_NAME --scope-map _repositories_admin --only-show-errors --query "credentials.passwords[0].value" -o tsv)
      helm version
      echo "Logging into ACR"
      helm registry login '$(acrContainerRegistry)' --username "helmtoken" --password $PASSWORD --debug
      echo "Change directory"
      cd '$(Build.ArtifactStagingDirectory)/helmartifact/'
      FILENAME=$(find . -iname hello-world*.tgz -type f -printf '%P\n')
      echo $FILENAME
      echo "Pushing Helm Chart"
      helm push $FILENAME 'oci://$(acrContainerRegistry)/helm' --debug

# - task: KubeloginInstaller@0
#   inputs:
#     kubeloginVersion: 'latest'

- script: |
    echo $(Build.SourcesDirectory)
    ls
  displayName: 'pwd'